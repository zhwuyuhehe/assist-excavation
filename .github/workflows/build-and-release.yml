name: Build and Release

on:
  push:
    branches:
      - main
      - 1.20.1
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - 1.20.1
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: false
        type: string
      release_name:
        description: 'Release name'
        required: false
        type: string

jobs:
  build:
    name: Build (${{ github.ref_name }})
    runs-on: ubuntu-latest
    outputs:
      mod_version: ${{ steps.extract.outputs.mod_version }}
      mc_version:  ${{ steps.extract.outputs.mc_version }}
      mod_id:      ${{ steps.extract.outputs.mod_id }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0      # 拉取所有分支和 tags，确保 tag push 可识别
          ref: ${{ github.ref }}

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --no-daemon --parallel

      - name: Extract project properties
        id: extract
        run: |
          MOD_VERSION=$(grep '^mod_version=' gradle.properties | cut -d= -f2)
          MC_VERSION=$(grep '^minecraft_version=' gradle.properties | cut -d= -f2)
          MOD_ID=$(jq -r '.id' src/main/resources/fabric.mod.json)
          echo "mod_version=$MOD_VERSION" >> $GITHUB_OUTPUT
          echo "mc_version=$MC_VERSION"  >> $GITHUB_OUTPUT
          echo "mod_id=$MOD_ID"          >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.ref_name }}
          path: build/libs/*.jar

  release:
    name: Release
    needs: build
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ github.ref_name }}
          path: build/libs

      - name: Determine Release Tag & Name
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.release_tag }}" ]; then
            TAG=${{ github.event.inputs.release_tag }}
            NAME="${{ github.event.inputs.release_name }}"
          else
            TAG="v${{ needs.build.outputs.mod_version }}+mc${{ needs.build.outputs.mc_version }}"
            NAME="${{ needs.build.outputs.mod_id }}"
          fi
          echo "tag=$TAG"   >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.vars.outputs.tag }}
          name: ${{ steps.vars.outputs.name }}
          artifacts: build/libs/*.jar
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
