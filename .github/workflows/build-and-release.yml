name: Build & Release

on:
  push:
    # 当推送形如 v<mod_version>+mc<mc_version> 的 tag 时触发
    tags:
      - 'v*+mc*'
  workflow_dispatch:

jobs:
  build:
    name: "Build (tag: ${{ github.ref_name }})"
    runs-on: ubuntu-latest
    outputs:
      mod_version: ${{ steps.extract.outputs.mod_version }}
      mc_version:  ${{ steps.extract.outputs.mc_version }}
      mod_id:      ${{ steps.extract.outputs.mod_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build --no-daemon --parallel

      - name: Extract mod properties
        id: extract
        run: |
          MOD_VERSION=$(grep '^mod_version=' gradle.properties | cut -d= -f2)
          MC_VERSION=$(grep '^minecraft_version=' gradle.properties | cut -d= -f2)
          MOD_ID=$(jq -r '.id' src/main/resources/fabric.mod.json)
          echo "mod_version=$MOD_VERSION" >> $GITHUB_OUTPUT
          echo "mc_version=$MC_VERSION"  >> $GITHUB_OUTPUT
          echo "mod_id=$MOD_ID"          >> $GITHUB_OUTPUT

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: build/libs/*.jar

  release:
    name: Publish Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: jar
          path: build/libs

      - name: Determine release info
        id: info
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          TITLE="${{ needs.build.outputs.mod_id }} v${{ needs.build.outputs.mod_version }} for MC ${{ needs.build.outputs.mc_version }}"
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "name=$TITLE"    >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag:   ${{ steps.info.outputs.tag }}
          name:  ${{ steps.info.outputs.name }}
          files: build/libs/*.jar
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
